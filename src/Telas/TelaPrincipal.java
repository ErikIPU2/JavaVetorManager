/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Telas;

import Manipuladores.Cryp;
import Manipuladores.ListdataInterpreter;
import Manipuladores.UserManer;
import Paineis.PainelCriarLista;
import Paineis.PainelFifo;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JMenu;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import Interfaces.IopenInterface;
import Paineis.PaineLifo;
import Paineis.PainelLista;
import java.awt.Desktop;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author erik
 */
public class TelaPrincipal extends javax.swing.JFrame implements IopenInterface{

    /**
     * Creates new form TelaPrincipal
     */
    public TelaPrincipal() {
        initComponents();
    }

    public TelaPrincipal(String username, int key) {
        initComponents();
        this.username = username;
        this.key = key;
    }

    private String username;
    private int key;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktop = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        b_novo = new javax.swing.JMenuItem();
        b_abrir = new javax.swing.JMenuItem();
        b_sair = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenu1.setText("Arquivo");

        b_novo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        b_novo.setText("Novo");
        b_novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_novoActionPerformed(evt);
            }
        });
        jMenu1.add(b_novo);

        b_abrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        b_abrir.setText("Abrir");
        b_abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_abrirActionPerformed(evt);
            }
        });
        jMenu1.add(b_abrir);

        b_sair.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        b_sair.setText("Sair");
        jMenu1.add(b_sair);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Sobre...");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        jMenuItem1.setText("Abrir no Navegador");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktop, javax.swing.GroupLayout.DEFAULT_SIZE, 577, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktop, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b_novoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_novoActionPerformed
        PainelCriarLista p = new PainelCriarLista(username, key, this);
        desktop.add(p);
        p.setVisible(true);
    }//GEN-LAST:event_b_novoActionPerformed

    private void b_abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_abrirActionPerformed
        File path;

        JFileChooser f = new JFileChooser();
        f.setFileFilter(new FileNameExtensionFilter("Arquivos de listData", "listdata"));

        if (f.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            path = f.getSelectedFile();

            String name = path.getName();

            if (!name.substring(name.lastIndexOf(".")).equals(".listdata")) {
                JOptionPane.showMessageDialog(this, "Extensão de arquivo invalida\nSelecione um arquivo \".listdata\"");
            } else {
                ListdataInterpreter arc = new ListdataInterpreter(path);
                try {
                    if (arc.header_isPublic()) {
                        openList(path, 0);
                    } else {
                        if (new Cryp().cifre(username, key).equals(arc.header_getUser())) {
                            openList(path, key);
                        } else {
                            if (JOptionPane.showConfirmDialog(this, "Esse arquivo é privado\nFaça login com o usuario que criou esse arquivo", "Arquivo Privado", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE) == JOptionPane.YES_OPTION) {
                                while (true) {
                                    String p_user = JOptionPane.showInputDialog(this, "Digite o username");
                                    String p_pass = JOptionPane.showInputDialog(this, "Digite a sua senha");

                                    if (p_user.isEmpty() || p_pass.isEmpty()) {
                                        JOptionPane.showMessageDialog(this, "Digite todos os campos", "Erro", JOptionPane.WARNING_MESSAGE);
                                    } else {
                                        int pKey = new Cryp().gerateVal(p_user, p_pass);
                                        String c_user = new Cryp().cifre(p_user, pKey);
                                        
                                        if (c_user.equals(arc.header_getUser())) {
                                            JOptionPane.showMessageDialog(this, "Arquivo acessado com sucesso");
                                            openList(path, pKey);
                                            break;
                                        }
                                        else {
                                            JOptionPane.showMessageDialog(this, "Informações incoretas");
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }
            }
        }


    }//GEN-LAST:event_b_abrirActionPerformed

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked

    }//GEN-LAST:event_jMenu2MouseClicked

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
       
    }//GEN-LAST:event_jMenu2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        if (Desktop.isDesktopSupported()) {
            try {
                Desktop.getDesktop().browse(new URI("https://listdataabout.firebaseapp.com/"));
            } catch (URISyntaxException ex) {
                Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    
    @Override
    public void openList(File path, int pkey) {
        ListdataInterpreter arc = new ListdataInterpreter(path);
        
        try {
            String type = arc.header_getType();
            if (type.equals("FIFO")) {
                PainelFifo a = new PainelFifo(path, pkey);
                desktop.add(a);
                a.setVisible(true);
            }
            else if (type.equals("LIFO")) {
                PaineLifo a = new PaineLifo(path, pkey);
                desktop.add(a);
                a.setVisible(true);
            }
            else if (type.equals(("LISTA"))) {
                PainelLista a = new PainelLista(path, pkey);
                desktop.add(a);
                a.setVisible(true);
            }
            else {
                JOptionPane.showMessageDialog(this, "Tipo de lista invalida: "+type, "Tipo invalido", JOptionPane.WARNING_MESSAGE);
            }
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    } 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {        
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPrincipal().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem b_abrir;
    private javax.swing.JMenuItem b_novo;
    private javax.swing.JMenuItem b_sair;
    private javax.swing.JDesktopPane desktop;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    // End of variables declaration//GEN-END:variables
}
