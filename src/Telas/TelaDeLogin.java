/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Telas;

import Manipuladores.Cryp;
import Manipuladores.ListdataInterpreter;
import Manipuladores.UserManer;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author erik
 */
public class TelaDeLogin extends javax.swing.JFrame {

    /**
     * Creates new form telaDeLogin
     */
    public TelaDeLogin() {
        initComponents();
    }
    
    UserManer manerUser = new UserManer();
    Cryp cryp = new Cryp();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        i_username = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        i_password = new javax.swing.JPasswordField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Login"));

        jLabel1.setText("Username");

        jLabel2.setText("Password");

        jButton1.setText("Logar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cadastrar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(i_username)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(7, 7, 7)))
                        .addGap(261, 261, 261))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addComponent(i_password))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(i_username)
                .addGap(51, 51, 51)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(i_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(106, 106, 106)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        jMenu1.setText("Sobre");

        jMenuItem1.setText("Abrir no navegador");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String username, password;
        
        try{
            
            username = i_username.getText();
            password = i_password.getText();
            
            int key = cryp.gerateVal(username, password);
            
            
            String userCryp = cryp.cifre(username, key);
            
            if (manerUser.veryExistentUser(userCryp)) {
                
                int index = manerUser.getUserIndex(userCryp);
                                
                String userLoger = cryp.unCifre(manerUser.getUsers(index), key);
                
                JOptionPane.showMessageDialog(this, "Bem vindo "+userLoger);
                
                dispose();
                
                new TelaPrincipal(userLoger, key).setVisible(true);
                      
            }
            else {
                JOptionPane.showMessageDialog(this, "Usuario não encontrado");
            }
            
        }catch(Exception e) {
            
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
        new TelaDeCadastro().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        if (Desktop.isDesktopSupported()) {
            try {
                Desktop.getDesktop().browse(new URI("https://listdataabout.firebaseapp.com/"));
            } catch (URISyntaxException ex) {
                Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
         
        if (args.length > 0) {
            boolean omite = false;
            boolean posExecute = false;
            for (int i = 0; i < args.length; i++) {
                
                switch (args[i]) {
                    
                    case "-help":
                    case "--help":
                        
                    break;
                    
                    case "-o":
                    case "--omite":
                        omite = !omite;
                    break;
                    
                    case "-e":
                    case "--execute":
                        posExecute = true;
                    break; 
                        
                    case "-k":
                    case "--keyGerate":
                        try {
                            if (omite) {
                                System.out.println(new Cryp().gerateVal(args[i+1], args[i+2]));
                            }
                            else {
                                System.out.println("Key: " + new Cryp().gerateVal(args[i+1], args[i+2]));
                            }
                        } catch (Exception e) {
                            System.out.println("Você precisa passar 2 parametros:\n"
                                    + "Exemplo: .. -k {{user}} {{password}}");
                        }   i += 2;
                    break;
                        
                    case "-c":
                    case "--cifre":
                        try {
                            if (omite) {
                                System.out.println(new Cryp().cifre(args[i+1], Integer.parseInt(args[i+2])));
                            }
                            else {
                                System.out.println("Msg: " + new Cryp().cifre(args[i+1], Integer.parseInt(args[i+2])));
                            }
                        }
                        catch (NumberFormatException e) {
                            System.out.println("O segundo parametro deve ser um numero inteiro");
                        }
                        catch (Exception e) {
                            System.out.println("Você precisa passar 2 parametros:\n"
                                    + "Exemplo: .. -c {{Mensagem}} {{Chave}}");
                        }   i += 2;
                    break;
                        
                    case "-d":
                    case "--decifre":
                        try {
                            if (omite) {
                                System.out.println(new Cryp().unCifre(args[i+1], Integer.parseInt(args[i+2])));
                            }
                            else {
                                System.out.println("Msg: " + new Cryp().unCifre(args[i+1], Integer.parseInt(args[i+2])));
                            }
                        }
                        catch (NumberFormatException e) {
                            System.out.println("O segundo parametro deve ser um numero inteiro");
                        }
                        catch (Exception e) {
                            System.out.println("Você precisa passar 2 parametros:\n"
                                    + "Exemplo: .. -c {{Mensagem}} {{Chave}}");
                        }   i += 2;
                    break;
                    
                    
                    case "-h":
                    case "--headerGet":
                        
                        try {
 
                            int key = Integer.parseInt(args[i + 2]);
                            File path = new File(args[i + 1]);
                            
                            ListdataInterpreter intp = new ListdataInterpreter(path);
                            Cryp cryp = new Cryp();
                            
                            if (omite) {
                                System.out.println(cryp.unCifre(intp.header_getUser(), key));
                                System.out.println(intp.header_getFileName());
                                System.out.println(intp.header_isPublic());
                                System.out.println(intp.header_getType());
                            }
                            else {
                                System.out.printf("Usuario: %s\n", cryp.unCifre(intp.header_getUser(), key));
                                System.out.printf("Nome do arquivo: %s\n", intp.header_getFileName());
                                System.out.printf("Arquivo publico: %b\n", intp.header_isPublic());
                                System.out.printf("Tipo da lista: %s\n", intp.header_getType());
                            }
                            
                            i += 2;
                        }
                        
                        catch(ArrayIndexOutOfBoundsException e) {
                            try {
                                ListdataInterpreter intp = new ListdataInterpreter(new File(args[i + 1]));
                                if (omite) {
                                    System.out.println(intp.header_getUser());
                                    System.out.println(intp.header_getFileName());
                                    System.out.println(intp.header_isPublic());
                                    System.out.println(intp.header_getType());
                                }
                                else {
                                    System.out.printf("Usuario: %s\n", intp.header_getUser());
                                    System.out.printf("Nome do arquivo: %s\n", intp.header_getFileName());
                                    System.out.printf("Arquivo publico: %b\n", intp.header_isPublic());
                                    System.out.printf("Tipo da lista: %s\n", intp.header_getType());
                                }
                            }
                            catch (ArrayIndexOutOfBoundsException ee) {
                                System.out.println("Você precisa passar 1 ou 2 parametros:\n"
                                        + "Exemplo: .. -k {{Arquivo}} [[Chave de cifragem]]");
                            }
                            catch (Exception ee) {
                                System.out.println(ee);
                            }
                            i += 1;
                            
                            
                        }
                        
                        catch(NumberFormatException e) {
                            System.out.println("O segundo parametro deve ser um numero inteiro");
                            i += 2;
                        }
                        catch(Exception e) {
                            System.out.println(e);
                            i += 2;
                        }
                        
                    break;
     
                    
                    
                    default:
                        System.out.println("Comando : \"" + args[i] + "\" Não encontrado");
                    break;
                }
            }
            if (!posExecute) {
                System.exit(NORMAL);
            }
        }
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaDeLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaDeLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaDeLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaDeLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaDeLogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField i_password;
    private javax.swing.JTextField i_username;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
